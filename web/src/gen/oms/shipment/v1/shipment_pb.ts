// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file oms/shipment/v1/shipment.proto (package oms.shipment.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Item, Shipment, ShipmentStatus } from "../../v1/types_pb.js";

/**
 * CreateShipmentInput describes the input to a CreateShipment operation
 *
 * @generated from message oms.shipment.v1.CreateShipmentInput
 */
export class CreateShipmentInput extends Message<CreateShipmentInput> {
  /**
   * @generated from field: string customer_id = 1;
   */
  customerId = "";

  /**
   * @generated from field: string fulfillment_id = 2;
   */
  fulfillmentId = "";

  /**
   * @generated from field: string id = 3;
   */
  id = "";

  /**
   * @generated from field: repeated oms.v1.Item items = 4;
   */
  items: Item[] = [];

  /**
   * @generated from field: string order_id = 5;
   */
  orderId = "";

  /**
   * @generated from field: string requestor_wid = 6;
   */
  requestorWid = "";

  constructor(data?: PartialMessage<CreateShipmentInput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "oms.shipment.v1.CreateShipmentInput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "customer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "fulfillment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "items", kind: "message", T: Item, repeated: true },
    { no: 5, name: "order_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "requestor_wid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateShipmentInput {
    return new CreateShipmentInput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateShipmentInput {
    return new CreateShipmentInput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateShipmentInput {
    return new CreateShipmentInput().fromJsonString(jsonString, options);
  }

  static equals(a: CreateShipmentInput | PlainMessage<CreateShipmentInput> | undefined, b: CreateShipmentInput | PlainMessage<CreateShipmentInput> | undefined): boolean {
    return proto3.util.equals(CreateShipmentInput, a, b);
  }
}

/**
 * CreateShipmentResult describes the output from a CreateShipment operation
 *
 * @generated from message oms.shipment.v1.CreateShipmentResult
 */
export class CreateShipmentResult extends Message<CreateShipmentResult> {
  /**
   * @generated from field: string courier_reference = 1;
   */
  courierReference = "";

  constructor(data?: PartialMessage<CreateShipmentResult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "oms.shipment.v1.CreateShipmentResult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "courier_reference", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateShipmentResult {
    return new CreateShipmentResult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateShipmentResult {
    return new CreateShipmentResult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateShipmentResult {
    return new CreateShipmentResult().fromJsonString(jsonString, options);
  }

  static equals(a: CreateShipmentResult | PlainMessage<CreateShipmentResult> | undefined, b: CreateShipmentResult | PlainMessage<CreateShipmentResult> | undefined): boolean {
    return proto3.util.equals(CreateShipmentResult, a, b);
  }
}

/**
 * GetShipmentInput describes the input to a GetShipment operation
 *
 * @generated from message oms.shipment.v1.GetShipmentInput
 */
export class GetShipmentInput extends Message<GetShipmentInput> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetShipmentInput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "oms.shipment.v1.GetShipmentInput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetShipmentInput {
    return new GetShipmentInput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetShipmentInput {
    return new GetShipmentInput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetShipmentInput {
    return new GetShipmentInput().fromJsonString(jsonString, options);
  }

  static equals(a: GetShipmentInput | PlainMessage<GetShipmentInput> | undefined, b: GetShipmentInput | PlainMessage<GetShipmentInput> | undefined): boolean {
    return proto3.util.equals(GetShipmentInput, a, b);
  }
}

/**
 * GetShipmentResult describes the output from a GetShipment operation
 *
 * @generated from message oms.shipment.v1.GetShipmentResult
 */
export class GetShipmentResult extends Message<GetShipmentResult> {
  /**
   * @generated from field: oms.v1.Shipment shipment = 1;
   */
  shipment?: Shipment;

  constructor(data?: PartialMessage<GetShipmentResult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "oms.shipment.v1.GetShipmentResult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shipment", kind: "message", T: Shipment },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetShipmentResult {
    return new GetShipmentResult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetShipmentResult {
    return new GetShipmentResult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetShipmentResult {
    return new GetShipmentResult().fromJsonString(jsonString, options);
  }

  static equals(a: GetShipmentResult | PlainMessage<GetShipmentResult> | undefined, b: GetShipmentResult | PlainMessage<GetShipmentResult> | undefined): boolean {
    return proto3.util.equals(GetShipmentResult, a, b);
  }
}

/**
 * ListShipmentsInput describes the input to a ListShipments operation
 *
 * @generated from message oms.shipment.v1.ListShipmentsInput
 */
export class ListShipmentsInput extends Message<ListShipmentsInput> {
  constructor(data?: PartialMessage<ListShipmentsInput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "oms.shipment.v1.ListShipmentsInput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListShipmentsInput {
    return new ListShipmentsInput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListShipmentsInput {
    return new ListShipmentsInput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListShipmentsInput {
    return new ListShipmentsInput().fromJsonString(jsonString, options);
  }

  static equals(a: ListShipmentsInput | PlainMessage<ListShipmentsInput> | undefined, b: ListShipmentsInput | PlainMessage<ListShipmentsInput> | undefined): boolean {
    return proto3.util.equals(ListShipmentsInput, a, b);
  }
}

/**
 * ListShipmentsResult describes the output from a ListShipments operation
 *
 * @generated from message oms.shipment.v1.ListShipmentsResult
 */
export class ListShipmentsResult extends Message<ListShipmentsResult> {
  /**
   * @generated from field: repeated oms.v1.Shipment shipments = 1;
   */
  shipments: Shipment[] = [];

  constructor(data?: PartialMessage<ListShipmentsResult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "oms.shipment.v1.ListShipmentsResult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shipments", kind: "message", T: Shipment, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListShipmentsResult {
    return new ListShipmentsResult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListShipmentsResult {
    return new ListShipmentsResult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListShipmentsResult {
    return new ListShipmentsResult().fromJsonString(jsonString, options);
  }

  static equals(a: ListShipmentsResult | PlainMessage<ListShipmentsResult> | undefined, b: ListShipmentsResult | PlainMessage<ListShipmentsResult> | undefined): boolean {
    return proto3.util.equals(ListShipmentsResult, a, b);
  }
}

/**
 * UpdateShipmentStatusInput describes the input to an UpdateShipmentStatus
 * operation
 *
 * @generated from message oms.shipment.v1.UpdateShipmentStatusInput
 */
export class UpdateShipmentStatusInput extends Message<UpdateShipmentStatusInput> {
  /**
   * @generated from field: string shipment_id = 1;
   */
  shipmentId = "";

  /**
   * @generated from field: oms.v1.ShipmentStatus status = 2;
   */
  status = ShipmentStatus.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 3;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<UpdateShipmentStatusInput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "oms.shipment.v1.UpdateShipmentStatusInput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shipment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "status", kind: "enum", T: proto3.getEnumType(ShipmentStatus) },
    { no: 3, name: "updated_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateShipmentStatusInput {
    return new UpdateShipmentStatusInput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateShipmentStatusInput {
    return new UpdateShipmentStatusInput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateShipmentStatusInput {
    return new UpdateShipmentStatusInput().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateShipmentStatusInput | PlainMessage<UpdateShipmentStatusInput> | undefined, b: UpdateShipmentStatusInput | PlainMessage<UpdateShipmentStatusInput> | undefined): boolean {
    return proto3.util.equals(UpdateShipmentStatusInput, a, b);
  }
}

