// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: oms/v1/types.proto

package omsv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CustomerAction enumerates the set of supported customer actions
type CustomerAction int32

const (
	CustomerAction_CUSTOMER_ACTION_UNSPECIFIED CustomerAction = 0
	CustomerAction_CUSTOMER_ACTION_CANCEL      CustomerAction = 1
	CustomerAction_CUSTOMER_ACTION_AMEND       CustomerAction = 2
	CustomerAction_CUSTOMER_ACTION_TIMED_OUT   CustomerAction = 3
)

// Enum value maps for CustomerAction.
var (
	CustomerAction_name = map[int32]string{
		0: "CUSTOMER_ACTION_UNSPECIFIED",
		1: "CUSTOMER_ACTION_CANCEL",
		2: "CUSTOMER_ACTION_AMEND",
		3: "CUSTOMER_ACTION_TIMED_OUT",
	}
	CustomerAction_value = map[string]int32{
		"CUSTOMER_ACTION_UNSPECIFIED": 0,
		"CUSTOMER_ACTION_CANCEL":      1,
		"CUSTOMER_ACTION_AMEND":       2,
		"CUSTOMER_ACTION_TIMED_OUT":   3,
	}
)

func (x CustomerAction) Enum() *CustomerAction {
	p := new(CustomerAction)
	*p = x
	return p
}

func (x CustomerAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomerAction) Descriptor() protoreflect.EnumDescriptor {
	return file_oms_v1_types_proto_enumTypes[0].Descriptor()
}

func (CustomerAction) Type() protoreflect.EnumType {
	return &file_oms_v1_types_proto_enumTypes[0]
}

func (x CustomerAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CustomerAction.Descriptor instead.
func (CustomerAction) EnumDescriptor() ([]byte, []int) {
	return file_oms_v1_types_proto_rawDescGZIP(), []int{0}
}

// FulfillmentStatus enumerates the set of supported fulfillment statuses
type FulfillmentStatus int32

const (
	FulfillmentStatus_FULFILLMENT_STATUS_UNSPECIFIED FulfillmentStatus = 0
	FulfillmentStatus_FULFILLMENT_STATUS_UNAVAILABLE FulfillmentStatus = 1
	FulfillmentStatus_FULFILLMENT_STATUS_PENDING     FulfillmentStatus = 2
	FulfillmentStatus_FULFILLMENT_STATUS_PROCESSING  FulfillmentStatus = 3
	FulfillmentStatus_FULFILLMENT_STATUS_COMPLETED   FulfillmentStatus = 4
	FulfillmentStatus_FULFILLMENT_STATUS_CANCELLED   FulfillmentStatus = 5
	FulfillmentStatus_FULFILLMENT_STATUS_FAILED      FulfillmentStatus = 6
)

// Enum value maps for FulfillmentStatus.
var (
	FulfillmentStatus_name = map[int32]string{
		0: "FULFILLMENT_STATUS_UNSPECIFIED",
		1: "FULFILLMENT_STATUS_UNAVAILABLE",
		2: "FULFILLMENT_STATUS_PENDING",
		3: "FULFILLMENT_STATUS_PROCESSING",
		4: "FULFILLMENT_STATUS_COMPLETED",
		5: "FULFILLMENT_STATUS_CANCELLED",
		6: "FULFILLMENT_STATUS_FAILED",
	}
	FulfillmentStatus_value = map[string]int32{
		"FULFILLMENT_STATUS_UNSPECIFIED": 0,
		"FULFILLMENT_STATUS_UNAVAILABLE": 1,
		"FULFILLMENT_STATUS_PENDING":     2,
		"FULFILLMENT_STATUS_PROCESSING":  3,
		"FULFILLMENT_STATUS_COMPLETED":   4,
		"FULFILLMENT_STATUS_CANCELLED":   5,
		"FULFILLMENT_STATUS_FAILED":      6,
	}
)

func (x FulfillmentStatus) Enum() *FulfillmentStatus {
	p := new(FulfillmentStatus)
	*p = x
	return p
}

func (x FulfillmentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FulfillmentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_oms_v1_types_proto_enumTypes[1].Descriptor()
}

func (FulfillmentStatus) Type() protoreflect.EnumType {
	return &file_oms_v1_types_proto_enumTypes[1]
}

func (x FulfillmentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FulfillmentStatus.Descriptor instead.
func (FulfillmentStatus) EnumDescriptor() ([]byte, []int) {
	return file_oms_v1_types_proto_rawDescGZIP(), []int{1}
}

// OrderStatus enumerates the set of supported order statuses
type OrderStatus int32

const (
	OrderStatus_ORDER_STATUS_UNSPECIFIED              OrderStatus = 0
	OrderStatus_ORDER_STATUS_PENDING                  OrderStatus = 1
	OrderStatus_ORDER_STATUS_PROCESSING               OrderStatus = 2
	OrderStatus_ORDER_STATUS_CUSTOMER_ACTION_REQUIRED OrderStatus = 3
	OrderStatus_ORDER_STATUS_COMPLETED                OrderStatus = 4
	OrderStatus_ORDER_STATUS_FAILED                   OrderStatus = 5
	OrderStatus_ORDER_STATUS_CANCELLED                OrderStatus = 6
	OrderStatus_ORDER_STATUS_TIMED_OUT                OrderStatus = 7
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "ORDER_STATUS_UNSPECIFIED",
		1: "ORDER_STATUS_PENDING",
		2: "ORDER_STATUS_PROCESSING",
		3: "ORDER_STATUS_CUSTOMER_ACTION_REQUIRED",
		4: "ORDER_STATUS_COMPLETED",
		5: "ORDER_STATUS_FAILED",
		6: "ORDER_STATUS_CANCELLED",
		7: "ORDER_STATUS_TIMED_OUT",
	}
	OrderStatus_value = map[string]int32{
		"ORDER_STATUS_UNSPECIFIED":              0,
		"ORDER_STATUS_PENDING":                  1,
		"ORDER_STATUS_PROCESSING":               2,
		"ORDER_STATUS_CUSTOMER_ACTION_REQUIRED": 3,
		"ORDER_STATUS_COMPLETED":                4,
		"ORDER_STATUS_FAILED":                   5,
		"ORDER_STATUS_CANCELLED":                6,
		"ORDER_STATUS_TIMED_OUT":                7,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_oms_v1_types_proto_enumTypes[2].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_oms_v1_types_proto_enumTypes[2]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_oms_v1_types_proto_rawDescGZIP(), []int{2}
}

// PaymentStatus enumerates the set of supported payment statuses
type PaymentStatus int32

const (
	PaymentStatus_PAYMENT_STATUS_UNSPECIFIED PaymentStatus = 0
	PaymentStatus_PAYMENT_STATUS_PENDING     PaymentStatus = 1
	PaymentStatus_PAYMENT_STATUS_SUCCESS     PaymentStatus = 2
	PaymentStatus_PAYMENT_STATUS_FAILED      PaymentStatus = 3
)

// Enum value maps for PaymentStatus.
var (
	PaymentStatus_name = map[int32]string{
		0: "PAYMENT_STATUS_UNSPECIFIED",
		1: "PAYMENT_STATUS_PENDING",
		2: "PAYMENT_STATUS_SUCCESS",
		3: "PAYMENT_STATUS_FAILED",
	}
	PaymentStatus_value = map[string]int32{
		"PAYMENT_STATUS_UNSPECIFIED": 0,
		"PAYMENT_STATUS_PENDING":     1,
		"PAYMENT_STATUS_SUCCESS":     2,
		"PAYMENT_STATUS_FAILED":      3,
	}
)

func (x PaymentStatus) Enum() *PaymentStatus {
	p := new(PaymentStatus)
	*p = x
	return p
}

func (x PaymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_oms_v1_types_proto_enumTypes[3].Descriptor()
}

func (PaymentStatus) Type() protoreflect.EnumType {
	return &file_oms_v1_types_proto_enumTypes[3]
}

func (x PaymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentStatus.Descriptor instead.
func (PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_oms_v1_types_proto_rawDescGZIP(), []int{3}
}

type ShipmentStatus int32

const (
	ShipmentStatus_SHIPMENT_STATUS_UNSPECIFIED ShipmentStatus = 0
	ShipmentStatus_SHIPMENT_STATUS_PENDING     ShipmentStatus = 1
	ShipmentStatus_SHIPMENT_STATUS_BOOKED      ShipmentStatus = 2
	ShipmentStatus_SHIPMENT_STATUS_DISPATCHED  ShipmentStatus = 3
	ShipmentStatus_SHIPMENT_STATUS_DELIVERED   ShipmentStatus = 4
)

// Enum value maps for ShipmentStatus.
var (
	ShipmentStatus_name = map[int32]string{
		0: "SHIPMENT_STATUS_UNSPECIFIED",
		1: "SHIPMENT_STATUS_PENDING",
		2: "SHIPMENT_STATUS_BOOKED",
		3: "SHIPMENT_STATUS_DISPATCHED",
		4: "SHIPMENT_STATUS_DELIVERED",
	}
	ShipmentStatus_value = map[string]int32{
		"SHIPMENT_STATUS_UNSPECIFIED": 0,
		"SHIPMENT_STATUS_PENDING":     1,
		"SHIPMENT_STATUS_BOOKED":      2,
		"SHIPMENT_STATUS_DISPATCHED":  3,
		"SHIPMENT_STATUS_DELIVERED":   4,
	}
)

func (x ShipmentStatus) Enum() *ShipmentStatus {
	p := new(ShipmentStatus)
	*p = x
	return p
}

func (x ShipmentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShipmentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_oms_v1_types_proto_enumTypes[4].Descriptor()
}

func (ShipmentStatus) Type() protoreflect.EnumType {
	return &file_oms_v1_types_proto_enumTypes[4]
}

func (x ShipmentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShipmentStatus.Descriptor instead.
func (ShipmentStatus) EnumDescriptor() ([]byte, []int) {
	return file_oms_v1_types_proto_rawDescGZIP(), []int{4}
}

// holds a set of items that will be delivered in one shipment (due to location and stock level).
type Fulfillment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId    string            `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	CustomerId string            `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Id         string            `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Items      []*Item           `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	Location   string            `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Status     FulfillmentStatus `protobuf:"varint,6,opt,name=status,proto3,enum=oms.v1.FulfillmentStatus" json:"status,omitempty"`
	Payment    *Payment          `protobuf:"bytes,7,opt,name=payment,proto3" json:"payment,omitempty"`
	Shipment   *Shipment         `protobuf:"bytes,8,opt,name=shipment,proto3" json:"shipment,omitempty"`
}

func (x *Fulfillment) Reset() {
	*x = Fulfillment{}
	mi := &file_oms_v1_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fulfillment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fulfillment) ProtoMessage() {}

func (x *Fulfillment) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fulfillment.ProtoReflect.Descriptor instead.
func (*Fulfillment) Descriptor() ([]byte, []int) {
	return file_oms_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *Fulfillment) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Fulfillment) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Fulfillment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Fulfillment) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Fulfillment) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Fulfillment) GetStatus() FulfillmentStatus {
	if x != nil {
		return x.Status
	}
	return FulfillmentStatus_FULFILLMENT_STATUS_UNSPECIFIED
}

func (x *Fulfillment) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *Fulfillment) GetShipment() *Shipment {
	if x != nil {
		return x.Shipment
	}
	return nil
}

// Item represents an item being ordered
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sku         string `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Quantity    int32  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_oms_v1_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_oms_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *Item) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Item) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// OrderStatus holds the status of an Order workflow.
type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerId   string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	ReceivedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
	Status       OrderStatus            `protobuf:"varint,4,opt,name=status,proto3,enum=oms.v1.OrderStatus" json:"status,omitempty"`
	Fulfillments []*Fulfillment         `protobuf:"bytes,5,rep,name=fulfillments,proto3" json:"fulfillments,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_oms_v1_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_oms_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *Order) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Order) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

func (x *Order) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *Order) GetFulfillments() []*Fulfillment {
	if x != nil {
		return x.Fulfillments
	}
	return nil
}

// Payment holds the status of a Payment.
type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubTotal int32         `protobuf:"varint,1,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`
	Tax      int32         `protobuf:"varint,2,opt,name=tax,proto3" json:"tax,omitempty"`
	Shipping int32         `protobuf:"varint,3,opt,name=shipping,proto3" json:"shipping,omitempty"`
	Total    int32         `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Status   PaymentStatus `protobuf:"varint,5,opt,name=status,proto3,enum=oms.v1.PaymentStatus" json:"status,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	mi := &file_oms_v1_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_oms_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *Payment) GetSubTotal() int32 {
	if x != nil {
		return x.SubTotal
	}
	return 0
}

func (x *Payment) GetTax() int32 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *Payment) GetShipping() int32 {
	if x != nil {
		return x.Shipping
	}
	return 0
}

func (x *Payment) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Payment) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

// Shipment describes the output from a Status query
type Shipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierReference string                 `protobuf:"bytes,1,opt,name=courier_reference,json=courierReference,proto3" json:"courier_reference,omitempty"`
	Id               string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Items            []*Item                `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Status           ShipmentStatus         `protobuf:"varint,4,opt,name=status,proto3,enum=oms.v1.ShipmentStatus" json:"status,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Shipment) Reset() {
	*x = Shipment{}
	mi := &file_oms_v1_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Shipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shipment) ProtoMessage() {}

func (x *Shipment) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shipment.ProtoReflect.Descriptor instead.
func (*Shipment) Descriptor() ([]byte, []int) {
	return file_oms_v1_types_proto_rawDescGZIP(), []int{4}
}

func (x *Shipment) GetCourierReference() string {
	if x != nil {
		return x.CourierReference
	}
	return ""
}

func (x *Shipment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Shipment) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Shipment) GetStatus() ShipmentStatus {
	if x != nil {
		return x.Status
	}
	return ShipmentStatus_SHIPMENT_STATUS_UNSPECIFIED
}

func (x *Shipment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_oms_v1_types_proto protoreflect.FileDescriptor

var file_oms_v1_types_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x6d, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6f, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75,
	0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x02, 0x0a, 0x0b, 0x46,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x6d, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x67, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x03, 0x73, 0x6b,
	0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x03, 0x73, 0x6b, 0x75, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x20,
	0x00, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xdb, 0x01, 0x0a, 0x05,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x37, 0x0a, 0x0c, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x07, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x74, 0x61, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd6, 0x01, 0x0a, 0x08, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x87,
	0x01, 0x0a, 0x0e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x19,
	0x0a, 0x15, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x41, 0x4d, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x55, 0x53,
	0x54, 0x4f, 0x4d, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x03, 0x2a, 0x81, 0x02, 0x0a, 0x11, 0x46, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22,
	0x0a, 0x1e, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4c, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c,
	0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c,
	0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x46, 0x55, 0x4c,
	0x46, 0x49, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x46,
	0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1d, 0x0a,
	0x19, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x2a, 0xfa, 0x01, 0x0a,
	0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x29, 0x0a, 0x25, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x05, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1a, 0x0a,
	0x16, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x07, 0x2a, 0x82, 0x01, 0x0a, 0x0d, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x59, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0xa9,
	0x01, 0x0a, 0x0e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x48, 0x49, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x48, 0x49, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x53, 0x48, 0x49, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53,
	0x48, 0x49, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x53,
	0x48, 0x49, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x04, 0x42, 0x91, 0x01, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x69, 0x6f, 0x2f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2d, 0x61, 0x70, 0x70, 0x2d, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6f, 0x6d, 0x73, 0x2f, 0x76,
	0x31, 0x3b, 0x6f, 0x6d, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4f, 0x58, 0x58, 0xaa, 0x02, 0x06,
	0x4f, 0x6d, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x06, 0x4f, 0x6d, 0x73, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x12, 0x4f, 0x6d, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x4f, 0x6d, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oms_v1_types_proto_rawDescOnce sync.Once
	file_oms_v1_types_proto_rawDescData = file_oms_v1_types_proto_rawDesc
)

func file_oms_v1_types_proto_rawDescGZIP() []byte {
	file_oms_v1_types_proto_rawDescOnce.Do(func() {
		file_oms_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_oms_v1_types_proto_rawDescData)
	})
	return file_oms_v1_types_proto_rawDescData
}

var file_oms_v1_types_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_oms_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_oms_v1_types_proto_goTypes = []any{
	(CustomerAction)(0),           // 0: oms.v1.CustomerAction
	(FulfillmentStatus)(0),        // 1: oms.v1.FulfillmentStatus
	(OrderStatus)(0),              // 2: oms.v1.OrderStatus
	(PaymentStatus)(0),            // 3: oms.v1.PaymentStatus
	(ShipmentStatus)(0),           // 4: oms.v1.ShipmentStatus
	(*Fulfillment)(nil),           // 5: oms.v1.Fulfillment
	(*Item)(nil),                  // 6: oms.v1.Item
	(*Order)(nil),                 // 7: oms.v1.Order
	(*Payment)(nil),               // 8: oms.v1.Payment
	(*Shipment)(nil),              // 9: oms.v1.Shipment
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_oms_v1_types_proto_depIdxs = []int32{
	6,  // 0: oms.v1.Fulfillment.items:type_name -> oms.v1.Item
	1,  // 1: oms.v1.Fulfillment.status:type_name -> oms.v1.FulfillmentStatus
	8,  // 2: oms.v1.Fulfillment.payment:type_name -> oms.v1.Payment
	9,  // 3: oms.v1.Fulfillment.shipment:type_name -> oms.v1.Shipment
	10, // 4: oms.v1.Order.received_at:type_name -> google.protobuf.Timestamp
	2,  // 5: oms.v1.Order.status:type_name -> oms.v1.OrderStatus
	5,  // 6: oms.v1.Order.fulfillments:type_name -> oms.v1.Fulfillment
	3,  // 7: oms.v1.Payment.status:type_name -> oms.v1.PaymentStatus
	6,  // 8: oms.v1.Shipment.items:type_name -> oms.v1.Item
	4,  // 9: oms.v1.Shipment.status:type_name -> oms.v1.ShipmentStatus
	10, // 10: oms.v1.Shipment.updated_at:type_name -> google.protobuf.Timestamp
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_oms_v1_types_proto_init() }
func file_oms_v1_types_proto_init() {
	if File_oms_v1_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oms_v1_types_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oms_v1_types_proto_goTypes,
		DependencyIndexes: file_oms_v1_types_proto_depIdxs,
		EnumInfos:         file_oms_v1_types_proto_enumTypes,
		MessageInfos:      file_oms_v1_types_proto_msgTypes,
	}.Build()
	File_oms_v1_types_proto = out.File
	file_oms_v1_types_proto_rawDesc = nil
	file_oms_v1_types_proto_goTypes = nil
	file_oms_v1_types_proto_depIdxs = nil
}
