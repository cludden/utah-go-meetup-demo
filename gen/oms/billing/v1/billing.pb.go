// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: oms/billing/v1/billing.proto

package billingv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/cludden/protoc-gen-go-temporal/gen/temporal/v1"
	v1 "github.com/temporalio/reference-app-orders-go/gen/oms/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ChargeInput is the input for the Charge workflow.
type ChargeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId     string     `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	OrderId        string     `protobuf:"bytes,5,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	FulfillmentId  string     `protobuf:"bytes,6,opt,name=fulfillment_id,json=fulfillmentId,proto3" json:"fulfillment_id,omitempty"`
	Reference      string     `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	Items          []*v1.Item `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	IdempotencyKey string     `protobuf:"bytes,4,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
}

func (x *ChargeInput) Reset() {
	*x = ChargeInput{}
	mi := &file_oms_billing_v1_billing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChargeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeInput) ProtoMessage() {}

func (x *ChargeInput) ProtoReflect() protoreflect.Message {
	mi := &file_oms_billing_v1_billing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeInput.ProtoReflect.Descriptor instead.
func (*ChargeInput) Descriptor() ([]byte, []int) {
	return file_oms_billing_v1_billing_proto_rawDescGZIP(), []int{0}
}

func (x *ChargeInput) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ChargeInput) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ChargeInput) GetFulfillmentId() string {
	if x != nil {
		return x.FulfillmentId
	}
	return ""
}

func (x *ChargeInput) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *ChargeInput) GetItems() []*v1.Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ChargeInput) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

// ChargeResult is the result for the Charge workflow.
type ChargeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceReference string `protobuf:"bytes,1,opt,name=invoice_reference,json=invoiceReference,proto3" json:"invoice_reference,omitempty"`
	SubTotal         int32  `protobuf:"varint,2,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`
	Shipping         int32  `protobuf:"varint,3,opt,name=shipping,proto3" json:"shipping,omitempty"`
	Tax              int32  `protobuf:"varint,4,opt,name=tax,proto3" json:"tax,omitempty"`
	Total            int32  `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	Success          bool   `protobuf:"varint,6,opt,name=success,proto3" json:"success,omitempty"`
	AuthCode         string `protobuf:"bytes,7,opt,name=auth_code,json=authCode,proto3" json:"auth_code,omitempty"`
}

func (x *ChargeResult) Reset() {
	*x = ChargeResult{}
	mi := &file_oms_billing_v1_billing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChargeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeResult) ProtoMessage() {}

func (x *ChargeResult) ProtoReflect() protoreflect.Message {
	mi := &file_oms_billing_v1_billing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeResult.ProtoReflect.Descriptor instead.
func (*ChargeResult) Descriptor() ([]byte, []int) {
	return file_oms_billing_v1_billing_proto_rawDescGZIP(), []int{1}
}

func (x *ChargeResult) GetInvoiceReference() string {
	if x != nil {
		return x.InvoiceReference
	}
	return ""
}

func (x *ChargeResult) GetSubTotal() int32 {
	if x != nil {
		return x.SubTotal
	}
	return 0
}

func (x *ChargeResult) GetShipping() int32 {
	if x != nil {
		return x.Shipping
	}
	return 0
}

func (x *ChargeResult) GetTax() int32 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *ChargeResult) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ChargeResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChargeResult) GetAuthCode() string {
	if x != nil {
		return x.AuthCode
	}
	return ""
}

// CheckFraudInput describes the input to a CheckFraud activity
type CheckFraudInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Charge     int32  `protobuf:"varint,2,opt,name=charge,proto3" json:"charge,omitempty"`
}

func (x *CheckFraudInput) Reset() {
	*x = CheckFraudInput{}
	mi := &file_oms_billing_v1_billing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckFraudInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFraudInput) ProtoMessage() {}

func (x *CheckFraudInput) ProtoReflect() protoreflect.Message {
	mi := &file_oms_billing_v1_billing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFraudInput.ProtoReflect.Descriptor instead.
func (*CheckFraudInput) Descriptor() ([]byte, []int) {
	return file_oms_billing_v1_billing_proto_rawDescGZIP(), []int{2}
}

func (x *CheckFraudInput) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *CheckFraudInput) GetCharge() int32 {
	if x != nil {
		return x.Charge
	}
	return 0
}

// CheckFraudResult describes the output from a CheckFraud activity
type CheckFraudResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Declined bool `protobuf:"varint,1,opt,name=declined,proto3" json:"declined,omitempty"`
}

func (x *CheckFraudResult) Reset() {
	*x = CheckFraudResult{}
	mi := &file_oms_billing_v1_billing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckFraudResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFraudResult) ProtoMessage() {}

func (x *CheckFraudResult) ProtoReflect() protoreflect.Message {
	mi := &file_oms_billing_v1_billing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFraudResult.ProtoReflect.Descriptor instead.
func (*CheckFraudResult) Descriptor() ([]byte, []int) {
	return file_oms_billing_v1_billing_proto_rawDescGZIP(), []int{3}
}

func (x *CheckFraudResult) GetDeclined() bool {
	if x != nil {
		return x.Declined
	}
	return false
}

// GenerateInvoiceInput describes the input to a GenerateInvoice activity
type GenerateInvoiceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string     `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Reference  string     `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	Items      []*v1.Item `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GenerateInvoiceInput) Reset() {
	*x = GenerateInvoiceInput{}
	mi := &file_oms_billing_v1_billing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateInvoiceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInvoiceInput) ProtoMessage() {}

func (x *GenerateInvoiceInput) ProtoReflect() protoreflect.Message {
	mi := &file_oms_billing_v1_billing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInvoiceInput.ProtoReflect.Descriptor instead.
func (*GenerateInvoiceInput) Descriptor() ([]byte, []int) {
	return file_oms_billing_v1_billing_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateInvoiceInput) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *GenerateInvoiceInput) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *GenerateInvoiceInput) GetItems() []*v1.Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// GenerateInvoiceResult describes the output from a GenerateInvoice activity
type GenerateInvoiceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceReference string `protobuf:"bytes,1,opt,name=invoice_reference,json=invoiceReference,proto3" json:"invoice_reference,omitempty"`
	SubTotal         int32  `protobuf:"varint,2,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`
	Shipping         int32  `protobuf:"varint,3,opt,name=shipping,proto3" json:"shipping,omitempty"`
	Tax              int32  `protobuf:"varint,4,opt,name=tax,proto3" json:"tax,omitempty"`
	Total            int32  `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GenerateInvoiceResult) Reset() {
	*x = GenerateInvoiceResult{}
	mi := &file_oms_billing_v1_billing_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateInvoiceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInvoiceResult) ProtoMessage() {}

func (x *GenerateInvoiceResult) ProtoReflect() protoreflect.Message {
	mi := &file_oms_billing_v1_billing_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInvoiceResult.ProtoReflect.Descriptor instead.
func (*GenerateInvoiceResult) Descriptor() ([]byte, []int) {
	return file_oms_billing_v1_billing_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateInvoiceResult) GetInvoiceReference() string {
	if x != nil {
		return x.InvoiceReference
	}
	return ""
}

func (x *GenerateInvoiceResult) GetSubTotal() int32 {
	if x != nil {
		return x.SubTotal
	}
	return 0
}

func (x *GenerateInvoiceResult) GetShipping() int32 {
	if x != nil {
		return x.Shipping
	}
	return 0
}

func (x *GenerateInvoiceResult) GetTax() int32 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *GenerateInvoiceResult) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ProcessPaymentInput describes the input to a ProcessPayment activity
type ProcessPaymentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Reference  string `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	Charge     int32  `protobuf:"varint,3,opt,name=charge,proto3" json:"charge,omitempty"`
}

func (x *ProcessPaymentInput) Reset() {
	*x = ProcessPaymentInput{}
	mi := &file_oms_billing_v1_billing_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessPaymentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentInput) ProtoMessage() {}

func (x *ProcessPaymentInput) ProtoReflect() protoreflect.Message {
	mi := &file_oms_billing_v1_billing_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentInput.ProtoReflect.Descriptor instead.
func (*ProcessPaymentInput) Descriptor() ([]byte, []int) {
	return file_oms_billing_v1_billing_proto_rawDescGZIP(), []int{6}
}

func (x *ProcessPaymentInput) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ProcessPaymentInput) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *ProcessPaymentInput) GetCharge() int32 {
	if x != nil {
		return x.Charge
	}
	return 0
}

// ProcessPaymentResult describes the output from a ProcessPayment activity
type ProcessPaymentResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	AuthCode string `protobuf:"bytes,2,opt,name=auth_code,json=authCode,proto3" json:"auth_code,omitempty"`
}

func (x *ProcessPaymentResult) Reset() {
	*x = ProcessPaymentResult{}
	mi := &file_oms_billing_v1_billing_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessPaymentResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentResult) ProtoMessage() {}

func (x *ProcessPaymentResult) ProtoReflect() protoreflect.Message {
	mi := &file_oms_billing_v1_billing_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentResult.ProtoReflect.Descriptor instead.
func (*ProcessPaymentResult) Descriptor() ([]byte, []int) {
	return file_oms_billing_v1_billing_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessPaymentResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProcessPaymentResult) GetAuthCode() string {
	if x != nil {
		return x.AuthCode
	}
	return ""
}

var File_oms_billing_v1_billing_proto protoreflect.FileDescriptor

var file_oms_billing_v1_billing_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6f, 0x6d, 0x73, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x6f, 0x6d, 0x73, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1b,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6f, 0x6d, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d,
	0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83, 0x02, 0x0a, 0x0b,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0e, 0x66, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0d, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x6d,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x64, 0x65, 0x6d,
	0x70, 0x6f, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4b, 0x65,
	0x79, 0x22, 0xd3, 0x01, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5b, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x46, 0x72, 0x61, 0x75, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x61,
	0x75, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x6c,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x63, 0x6c,
	0x69, 0x6e, 0x65, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x6d,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x85, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x09, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x20, 0x00,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x4a, 0x0a, 0x03, 0x41, 0x70, 0x69, 0x12, 0x43,
	0x0a, 0x06, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x32, 0xaa, 0x04, 0x0a, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0xd6,
	0x01, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x6f, 0x6d, 0x73, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x90, 0x01, 0x8a, 0xc4, 0x03, 0x8b, 0x01, 0x2a, 0x29, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x3a, 0x24, 0x7b, 0x21, 0x20, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x4b, 0x65, 0x79, 0x2e, 0x6f, 0x72, 0x28, 0x75, 0x75, 0x69, 0x64, 0x5f,
	0x76, 0x34, 0x28, 0x29, 0x29, 0x20, 0x7d, 0x72, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x7a, 0x4b, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x20, 0x3d, 0x20, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x20, 0x0a, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x20, 0x3d, 0x20, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x20, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x20, 0x3d, 0x20, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x20, 0x0a, 0x12, 0x64, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x46, 0x72, 0x61, 0x75, 0x64, 0x12, 0x1f, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x61, 0x75,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x61,
	0x75, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x13, 0x92, 0xc4, 0x03, 0x0f, 0x22, 0x03,
	0x08, 0xac, 0x02, 0x32, 0x08, 0x0a, 0x02, 0x08, 0x05, 0x1a, 0x02, 0x08, 0x05, 0x12, 0x68, 0x0a,
	0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x12, 0x24, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x08, 0x92,
	0xc4, 0x03, 0x04, 0x12, 0x02, 0x08, 0x1e, 0x12, 0x65, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x6f, 0x6d, 0x73, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24,
	0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x08, 0x92, 0xc4, 0x03, 0x04, 0x22, 0x02, 0x08, 0x78, 0x1a, 0x10,
	0x8a, 0xc4, 0x03, 0x0c, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2d, 0x76, 0x31,
	0x42, 0xc8, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x73, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x69, 0x6f, 0x2f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2d, 0x61, 0x70, 0x70, 0x2d, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6f, 0x6d, 0x73, 0x2f, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4f, 0x42, 0x58, 0xaa, 0x02, 0x0e, 0x4f, 0x6d, 0x73, 0x2e,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x4f, 0x6d, 0x73,
	0x5c, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x4f, 0x6d,
	0x73, 0x5c, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x4f, 0x6d, 0x73, 0x3a, 0x3a,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_oms_billing_v1_billing_proto_rawDescOnce sync.Once
	file_oms_billing_v1_billing_proto_rawDescData = file_oms_billing_v1_billing_proto_rawDesc
)

func file_oms_billing_v1_billing_proto_rawDescGZIP() []byte {
	file_oms_billing_v1_billing_proto_rawDescOnce.Do(func() {
		file_oms_billing_v1_billing_proto_rawDescData = protoimpl.X.CompressGZIP(file_oms_billing_v1_billing_proto_rawDescData)
	})
	return file_oms_billing_v1_billing_proto_rawDescData
}

var file_oms_billing_v1_billing_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_oms_billing_v1_billing_proto_goTypes = []any{
	(*ChargeInput)(nil),           // 0: oms.billing.v1.ChargeInput
	(*ChargeResult)(nil),          // 1: oms.billing.v1.ChargeResult
	(*CheckFraudInput)(nil),       // 2: oms.billing.v1.CheckFraudInput
	(*CheckFraudResult)(nil),      // 3: oms.billing.v1.CheckFraudResult
	(*GenerateInvoiceInput)(nil),  // 4: oms.billing.v1.GenerateInvoiceInput
	(*GenerateInvoiceResult)(nil), // 5: oms.billing.v1.GenerateInvoiceResult
	(*ProcessPaymentInput)(nil),   // 6: oms.billing.v1.ProcessPaymentInput
	(*ProcessPaymentResult)(nil),  // 7: oms.billing.v1.ProcessPaymentResult
	(*v1.Item)(nil),               // 8: oms.v1.Item
}
var file_oms_billing_v1_billing_proto_depIdxs = []int32{
	8, // 0: oms.billing.v1.ChargeInput.items:type_name -> oms.v1.Item
	8, // 1: oms.billing.v1.GenerateInvoiceInput.items:type_name -> oms.v1.Item
	0, // 2: oms.billing.v1.Api.Charge:input_type -> oms.billing.v1.ChargeInput
	0, // 3: oms.billing.v1.Worker.Charge:input_type -> oms.billing.v1.ChargeInput
	2, // 4: oms.billing.v1.Worker.CheckFraud:input_type -> oms.billing.v1.CheckFraudInput
	4, // 5: oms.billing.v1.Worker.GenerateInvoice:input_type -> oms.billing.v1.GenerateInvoiceInput
	6, // 6: oms.billing.v1.Worker.ProcessPayment:input_type -> oms.billing.v1.ProcessPaymentInput
	1, // 7: oms.billing.v1.Api.Charge:output_type -> oms.billing.v1.ChargeResult
	1, // 8: oms.billing.v1.Worker.Charge:output_type -> oms.billing.v1.ChargeResult
	3, // 9: oms.billing.v1.Worker.CheckFraud:output_type -> oms.billing.v1.CheckFraudResult
	5, // 10: oms.billing.v1.Worker.GenerateInvoice:output_type -> oms.billing.v1.GenerateInvoiceResult
	7, // 11: oms.billing.v1.Worker.ProcessPayment:output_type -> oms.billing.v1.ProcessPaymentResult
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_oms_billing_v1_billing_proto_init() }
func file_oms_billing_v1_billing_proto_init() {
	if File_oms_billing_v1_billing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oms_billing_v1_billing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_oms_billing_v1_billing_proto_goTypes,
		DependencyIndexes: file_oms_billing_v1_billing_proto_depIdxs,
		MessageInfos:      file_oms_billing_v1_billing_proto_msgTypes,
	}.Build()
	File_oms_billing_v1_billing_proto = out.File
	file_oms_billing_v1_billing_proto_rawDesc = nil
	file_oms_billing_v1_billing_proto_goTypes = nil
	file_oms_billing_v1_billing_proto_depIdxs = nil
}
